import java.util.Arrays;
import java.util.Scanner;
class maxheap{
	int[] arr;
	int maxsize,heapsize;
	maxheap(int maxsize) {
		this.maxsize=maxsize;
		heapsize=0;
		arr = new int[maxsize];
}
int parent(int i) {
	return (i-1)/2;
}
int lchild(int i) {
	return 2*i+1;
}
int rchild(int i) {
	return 2*i+2;
}
void maxheapify(int i) {
	int l=lchild(i);
	int r=rchild(i);
	int largest=i;
	if(l<heapsize && arr[l]>arr[i]) 
		largest=l;
	if(r<heapsize && arr[r]>arr[largest])
		largest=r;
	if(largest!=i) {
		int temp=arr[i];
		arr[i]=arr[largest];
		arr[largest]=temp;
		maxheapify(largest);
	}
}
void removemax() {
	if(heapsize<=0)
		System.out.println("heap is empty:");
	if(heapsize==0)
		heapsize--;
	else {
		arr[0]=arr[heapsize-1];
		heapsize--;
		maxheapify(0);
	}
}
int getmax() {
	return arr[0];
}
int cursize() {
	return heapsize;
}
void insertkey(int x){
	if(heapsize==maxsize) {
		System.out.println("could not insert key:");
	return;
	}
	int i=heapsize;
	arr[i]=x;
	heapsize++;
while(i!=0 && arr[parent(i)]<arr[i]) {
	int temp=arr[i];
	arr[i]=arr[parent(i)];
	i=parent(i);
}
}
public static void main(String[] args) {
	maxheap h=new maxheap(15);
	int elements[]={3,10,12,8,2,14};
	for(int e:elements)
		h.insertkey(e);
System.out.println("The current size of the heap is " + h.cursize());
 System.out.println("The current maximum element is " + h.getmax());
 h.removemax();
 System.out.println("The current size of the heap is " + h.cursize());
// Inserting 2 new keys into the heap.
 h.insertkey(15);
 h.insertkey(5);
 System.out.println("The current size of the heap is " + h.cursize());
 System.out.println("The current maximum element is " + h.getmax());
 }
}
